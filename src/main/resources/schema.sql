DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


CREATE TABLE IF NOT EXISTS users (
                                     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR NOT NULL,
                                     email VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS requests (
                                        id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        description VARCHAR NOT NULL,
                                        requestor_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
                                     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR NOT NULL,
                                     description VARCHAR NOT NULL,
                                     is_available BOOLEAN,
                                     owner_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
                                     request_id INTEGER REFERENCES requests(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
                                        id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                        end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                        item_id INTEGER REFERENCES items(id) ON DELETE CASCADE,
                                        booker_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
                                        status VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS comments (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        text VARCHAR NOT NULL,
                                        item_id INTEGER REFERENCES items(id) ON DELETE CASCADE,
                                        author_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);
